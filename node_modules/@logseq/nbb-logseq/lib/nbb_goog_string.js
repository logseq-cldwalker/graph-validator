
import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
'use strict';var MJa;$APP.OW=function(a,b){const c=Array.prototype.slice.call(arguments),d=c.shift();if("undefined"==typeof d)throw Error("[goog.string.format] Template required");return d.replace(/%([0\- \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g,function(e,f,l,m,q,A,x,C){if("%"==A)return"%";const t=c.shift();if("undefined"==typeof t)throw Error("[goog.string.format] Not enough arguments");arguments[0]=t;return $APP.OW.Ae[A].apply(null,arguments)})};MJa=new $APP.r(null,"format","format",333606761,null);
$APP.PW=new $APP.G(null,"errors","errors",-908790718);/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/
$APP.OW.Ae={};$APP.OW.Ae.s=function(a,b,c){return isNaN(c)||""==c||a.length>=Number(c)?a:a=-1<b.indexOf("-",0)?a+(0,$APP.EC)(" ",Number(c)-a.length):(0,$APP.EC)(" ",Number(c)-a.length)+a};
$APP.OW.Ae.f=function(a,b,c,d,e){d=a.toString();isNaN(e)||""==e||(d=parseFloat(a).toFixed(e));let f;f=0>Number(a)?"-":0<=b.indexOf("+")?"+":0<=b.indexOf(" ")?" ":"";0<=Number(a)&&(d=f+d);if(isNaN(c)||d.length>=Number(c))return d;d=isNaN(e)?Math.abs(Number(a)).toString():Math.abs(Number(a)).toFixed(e);a=Number(c)-d.length-f.length;0<=b.indexOf("-",0)?d=f+d+(0,$APP.EC)(" ",a):(b=0<=b.indexOf("0",0)?"0":" ",d=f+(0,$APP.EC)(b,a)+d);return d};
$APP.OW.Ae.d=function(a,b,c,d,e,f,l,m){return $APP.OW.Ae.f(parseInt(a,10),b,c,d,0,f,l,m)};$APP.OW.Ae.i=$APP.OW.Ae.d;$APP.OW.Ae.u=$APP.OW.Ae.d;var NJa=new $APP.h(null,1,[MJa,$APP.OW],null);try{$APP.Gy(new $APP.h(null,2,[$APP.Nx,new $APP.h(null,1,[$APP.qJ,{format:$APP.OW}],null),$APP.qs,new $APP.h(null,1,[$APP.qJ,NJa],null)],null))}catch(a){throw console.error("An error occurred when calling (nbb.impl.gstring/init)"),a;};
export { $APP, shadow$provide, $jscomp };
